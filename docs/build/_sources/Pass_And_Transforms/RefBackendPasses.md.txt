<!-- Autogenerated by mlir-tblgen; don't manually edit -->
### `-lower-alloc-memref-ops`: Lower AllocMemRefOp's
### `-lower-to-refbackrt-abi`: Lower constructs requiring runtime support to `refbackrt`
We have a specialized dialect `refbackrt` which models our runtime's data
structures, and function signatures (and presumably eventually, other
ABI boundaries like external calls if we ever support it) will be
converted.

The constructs requiring runtime support are:
- function signatures / module metadata
- error handling
### `-refback-lower-to-llvm`: Lower everything to LLVM
### `-restricted-canonicalize`: Canonicalize operations
This pass is the same as the regular `canonicalize` pass, but it only
applies a restricted set of patterns.

This is useful when a particular canonicalization is actually needed for
correctness of a lowering flow. For such cases, running a restricted set of
canonicalizations makes it clearer which passes are needed for correctness
and which passes are "just optimizations". This helps when debugging
miscompiles and other situations where the compiler is not behaving as
expected.

#### Options
```
-included-dialects : Which dialects should be canonicalized
```
